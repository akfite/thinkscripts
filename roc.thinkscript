# ROC (Return On Capital)
# 
#   The expected return relative to the capital tied up.
#

# note: this assumes the share price has not changed at expiry

# define constants
def SPREAD_CROSSING_RATIO = 0.1; # assume we can do slightly better than the bid (0=sell to bid)
def FEE_PER_CONTRACT = 0.45; # usually $0.65/contract unless you negotiate it
def PUT_MARGIN_RATIO = 1; # [0-1]; 1 = no margin (value = Max(AVAILABLE_CASH / PUT_NOTIONAL_VALUE, 1))
# not going to consider selling naked calls here

# all further calculations are PER SHARE
def spread = ask() - bid(); # option price spread
def strike = GetStrike();
def underlying = close(GetUnderlyingSymbol(), priceType = PriceType.LAST);

def total_premium = bid() + (SPREAD_CROSSING_RATIO * spread) - (FEE_PER_CONTRACT / 100);
def intrinsic_premium;
def extrinsic_premium;
def return_on_capital;

# report returns assuming the share price does not move
if (IsPut()) {
    # selling puts
    intrinsic_premium = Max(strike - underlying, 0);
    extrinsic_premium = total_premium - intrinsic_premium;
    return_on_capital = extrinsic_premium / (strike * PUT_MARGIN_RATIO);
} else {
    # buying underlying shares & selling calls
    intrinsic_premium = Max(underlying - strike, 0);
    extrinsic_premium = total_premium - intrinsic_premium;
    return_on_capital = extrinsic_premium / underlying;
}

AddLabel(yes, AsText(100 * return_on_capital, "%1$.2f%%"), color.orange);
